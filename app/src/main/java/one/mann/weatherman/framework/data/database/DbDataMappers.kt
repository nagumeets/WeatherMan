package one.mann.weatherman.framework.data.database

import one.mann.domain.model.Location
import one.mann.domain.model.NotificationData
import one.mann.weatherman.framework.data.database.model.LocationTuple
import one.mann.weatherman.framework.data.database.model.NotificationTuple
import one.mann.domain.model.Weather as DomainWeather
import one.mann.weatherman.framework.data.database.model.Weather as DbWeather

internal fun LocationTuple.mapToDomain(): Location = Location(listOf(coordinatesLat, coordinatesLong), id)

internal fun NotificationTuple.mapToDomain(): NotificationData = NotificationData(cityName, currentTemp, description)

internal fun DomainWeather.mapToDb(): DbWeather = DbWeather(
        id, // id = null to use SQLite's default increment system
        cityName,
        currentTemp,
        feelsLike,
        pressure,
        humidity,
        description,
        iconId,
        sunrise,
        sunset,
        countryFlag,
        clouds,
        windSpeed,
        windDirection,
        lastUpdated,
        visibility,
        dayLength,
        lastChecked,
        sunPosition,
        minTemp,
        maxTemp,
        day1Date,
        day1MinTemp,
        day1MaxTemp,
        day1IconId,
        day2Date,
        day2MinTemp,
        day2MaxTemp,
        day2IconId,
        day3Date,
        day3MinTemp,
        day3MaxTemp,
        day3IconId,
        day4Date,
        day4MinTemp,
        day4MaxTemp,
        day4IconId,
        day5Date,
        day5MinTemp,
        day5MaxTemp,
        day5IconId,
        day6Date,
        day6MinTemp,
        day6MaxTemp,
        day6IconId,
        day7Date,
        day7MinTemp,
        day7MaxTemp,
        day7IconId,
        hour03Time,
        hour03Temp,
        hour03IconId,
        hour03SunPosition,
        hour06Time,
        hour06Temp,
        hour06IconId,
        hour06SunPosition,
        hour09Time,
        hour09Temp,
        hour09IconId,
        hour09SunPosition,
        hour12Time,
        hour12Temp,
        hour12IconId,
        hour12SunPosition,
        hour15Time,
        hour15Temp,
        hour15IconId,
        hour15SunPosition,
        hour18Time,
        hour18Temp,
        hour18IconId,
        hour18SunPosition,
        hour21Time,
        hour21Temp,
        hour21IconId,
        hour21SunPosition,
        coordinatesLat,
        coordinatesLong,
        locationString
)

internal fun DbWeather.mapToDomain(): DomainWeather = DomainWeather(
        id,
        cityName,
        currentTemp,
        feelsLike,
        pressure,
        humidity,
        description,
        iconId,
        sunrise,
        sunset,
        countryFlag,
        clouds,
        windSpeed,
        windDirection,
        lastUpdated,
        visibility,
        dayLength,
        lastChecked,
        sunPosition,
        minTemp,
        maxTemp,
        day1Date,
        day1MinTemp,
        day1MaxTemp,
        day1IconId,
        day2Date,
        day2MinTemp,
        day2MaxTemp,
        day2IconId,
        day3Date,
        day3MinTemp,
        day3MaxTemp,
        day3IconId,
        day4Date,
        day4MinTemp,
        day4MaxTemp,
        day4IconId,
        day5Date,
        day5MinTemp,
        day5MaxTemp,
        day5IconId,
        day6Date,
        day6MinTemp,
        day6MaxTemp,
        day6IconId,
        day7Date,
        day7MinTemp,
        day7MaxTemp,
        day7IconId,
        hour03Time,
        hour03Temp,
        hour03IconId,
        hour03SunPosition,
        hour06Time,
        hour06Temp,
        hour06IconId,
        hour06SunPosition,
        hour09Time,
        hour09Temp,
        hour09IconId,
        hour09SunPosition,
        hour12Time,
        hour12Temp,
        hour12IconId,
        hour12SunPosition,
        hour15Time,
        hour15Temp,
        hour15IconId,
        hour15SunPosition,
        hour18Time,
        hour18Temp,
        hour18IconId,
        hour18SunPosition,
        hour21Time,
        hour21Temp,
        hour21IconId,
        hour21SunPosition,
        coordinatesLat,
        coordinatesLong,
        locationString
)